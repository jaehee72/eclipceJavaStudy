package java_study2.co.kr.jungbu;

public class L19StreamAPIEx5 {
	class Student{
		//public(어디서든) protected(상속) default(같은 패키지 안에서) private : 접근지정자
		private String name;
		private boolean isMale;
		private int hak;
		private int ban;
		private int score;
		public Student(String name, boolean isMale, int hak, int ban, int score ) {
			this.name=name;
			this.isMale=isMale;
			this.hak=hak;
			this.ban=ban;
			this.score=score;
		}
		//set : 필드에 값을 지정하는 행위
		//get : 필드의 값을 반환하는 행위
		//캡슐화 : 객체의
		//외부에서 필드를 접근할 수 있게 생성한 함수
		//get set 함수는 디자인 패턴(구조, 형식)으로 개발자들이 사용하다가 너무 보기 좋아 약속으로 만든 것(js의 class를 도입하면서 문법을 만들었음)
		//get set을 필드를 정의하는 객체를 VariableObject Data TransferObject라 한다.
		//디자인 패턴과 Mode lViewController => Spring
		//캡슐화에 대해 아는 만큼 설명하라, vo dto가 무엇인가요, 디자인 패턴
		
		public String getName() {return name;}
		public boolean isMAle() {return isMale;}
		public int getHAk() { return hak;}
		public int getBan() { return ban;}
		
		
		public boolean setScore(int score) {	//생성자와 동일
			if(score<=100 && score>=0) {
				this.score = score;
				return true;
			}else {
				return false;
			}
		}

		@Override
		public String toString() {
			return "{"+name+", "+isMale+","+hak+","+ban+","+score+"}";
		}
		
	}

	public static void main(String[] args) {
	
		

		
		studentList.add(out.new Student("김지미", false, ))
		
		
		
		
		//자료를 상상하고 구조화하는 연습 => 자료를 처리 => 필요한 자료
		//lazy연산 (연산 지연) : Stream api는 연산 지연을 한다.
		//반복문 == 일 (시간, 돈)

		System.out.println(StudentList.get(0).getHak());
		//1학년 남자들의 점수
		Optional <String> boySum = studentList.stream()
				.filter(Student::isMale)
				.filter(p->p.p.hak==1)
				.map(p->p.score+"") //11 = "11"
				.reduce((s1, s2)->","+s2);
		
		
		
		
	}	
	
}
